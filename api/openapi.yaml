openapi: 3.0.0
info:
  description: Kafka Connect REST API https://docs.confluent.io/platform/current/connect/references/restapi.html
  title: Kafka Connect REST API
  version: 0.1.9
servers:
- url: /
paths:
  /:
    get:
      operationId: getClusterInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterInfoResponse'
          description: Cluster info retrieved successfully.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Top-level (root) request that gets the version of the Connect worker
        that serves the REST request, the git commit ID of the source code, and the
        Kafka cluster ID that the worker is connected to.
  /connectors:
    get:
      operationId: listConnectors
      parameters:
      - description: Retrieves additional state/configuration information for each
          of the connectors returned in the API call.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - info
            - status
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
          description: Connectors fetched successfully.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Get a list of active connectors.
    post:
      operationId: createConnector
      requestBody:
        $ref: '#/components/requestBodies/CreateConnectorRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectorResponse'
          description: New connector created successfully.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Conflict. Rebalance in progress.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Unprocessable Entity.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Create a new connector, returning the current connector info if successful.
        Return 409 (Conflict) if rebalance is in process, or if the connector already
        exists.
  /connectors/{name}:
    delete:
      operationId: deleteConnector
      parameters:
      - description: Name of the connector.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Conflict. Rebalance in progress.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Delete a connector, halting all tasks and deleting its configuration.
    get:
      operationId: getConnector
      parameters:
      - description: Name of the connector.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorResponse'
          description: Connector fetched successfully.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Get information about the connector.
  /connectors/{name}/status:
    get:
      operationId: getConnectorStatus
      parameters:
      - description: Name of the connector.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
      summary: |
        Gets the current status of the connector, including:
        * whether it is running or restarting, or if it has failed or paused
        * which worker it is assigned to
        * error information if it has failed
        * the state of all its tasks
  /connectors/{name}/restart:
    post:
      operationId: restartConnector
      parameters:
      - description: Name of the connector.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether to restart the connector instance and task
          instances (includeTasks=true) or just the connector instance (includeTasks=false).
        explode: true
        in: query
        name: includeTasks
        required: false
        schema:
          type: boolean
        style: form
      - description: Specifies whether to restart just the instances with a FAILED
          status (onlyFailed=true) or all instances (onlyFailed=false).
        explode: true
        in: query
        name: onlyFailed
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: OK.
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted
        "204":
          $ref: '#/components/responses/NotContentResponse'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Resource not found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Conflict. Rebalance in progress.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Restart the connector. You may use the following query parameters to
        restart any combination of the Connector and/or Task instances for the connector.
  /connectors/{name}/pause:
    put:
      operationId: pauseConnector
      parameters:
      - description: Name of the connector.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Conflict. Rebalance in progress.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Pause the connector and its tasks, which stops message processing until
        the connector is resumed. This call asynchronous and the tasks will not transition
        to PAUSED state at the same time.
  /connectors/{name}/resume:
    put:
      operationId: resumeConnector
      parameters:
      - description: Name of the connector.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Internal Server Error.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
          description: Service Unavailable.
      summary: Resume a paused connector or do nothing if the connector is not paused.
        This call asynchronous and the tasks will not transition to RUNNING state
        at the same time.
components:
  parameters:
    ConnectorNameParameter:
      description: Name of the connector.
      explode: false
      in: path
      name: name
      required: true
      schema:
        type: string
      style: simple
    ExpandParameter:
      description: Retrieves additional state/configuration information for each of
        the connectors returned in the API call.
      explode: true
      in: query
      name: expand
      required: false
      schema:
        items:
          enum:
          - info
          - status
          type: string
        type: array
      style: form
    IncludeTasksParameter:
      description: Specifies whether to restart the connector instance and task instances
        (includeTasks=true) or just the connector instance (includeTasks=false).
      explode: true
      in: query
      name: includeTasks
      required: false
      schema:
        type: boolean
      style: form
    OnlyFailedParameter:
      description: Specifies whether to restart just the instances with a FAILED status
        (onlyFailed=true) or all instances (onlyFailed=false).
      explode: true
      in: query
      name: onlyFailed
      required: false
      schema:
        type: boolean
      style: form
  requestBodies:
    CreateConnectorRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConnectorRequest'
      description: New connector request.
      required: true
  responses:
    GetClusterInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetClusterInfoResponse'
      description: Cluster info retrieved successfully.
    CreateConnectorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConnectorResponse'
      description: New connector created successfully.
    GetConnectorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectorResponse'
      description: Connector fetched successfully.
    ListConnectorsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListConnectorsResponse'
      description: Connectors fetched successfully.
    OKResponse:
      description: OK.
    CreatedResponse:
      description: Created
    NoContentResponse:
      description: No Content
    ForbiddenResponse:
      description: Forbidden
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        text/plain:
          schema:
            type: string
      description: Conflict. Rebalance in progress.
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        text/plain:
          schema:
            type: string
      description: Resource not found.
    UnprocessableEntityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        text/plain:
          schema:
            type: string
      description: Unprocessable Entity.
    ServerErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        text/plain:
          schema:
            type: string
      description: Internal Server Error.
    ServiceUnavailableResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        text/plain:
          schema:
            type: string
      description: Service Unavailable.
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        text/plain:
          schema:
            type: string
      description: Unexpected Error.
  schemas:
    Error:
      description: Generic error.
      properties:
        error_code:
          description: Error code.
          type: number
        message:
          description: Error message.
          type: string
      type: object
    GetClusterInfoResponse:
      example:
        kafka_cluster_id: kafka_cluster_id
        commit: commit
        version: version
      properties:
        version:
          description: Connect worker version.
          type: string
        commit:
          description: git commit ID.
          type: string
        kafka_cluster_id:
          description: Kafka cluster ID.
          type: string
      type: object
    CreateConnectorRequest:
      example:
        name: name
        config: '{}'
      properties:
        name:
          description: Name of the connector.
          type: string
        config:
          description: Configuration of a connector/task/worker. All keys/values should
            be strings.
          type: object
      type: object
    CreateConnectorResponse:
      example:
        name: name
        config: '{}'
        tasks:
        - task: 0.8008281904610115
          connector: connector
        - task: 0.8008281904610115
          connector: connector
      properties:
        name:
          description: Name of the connector.
          type: string
        config:
          description: Configuration of a connector/task/worker. All keys/values should
            be strings.
          type: object
        tasks:
          description: Lits of active tasks generated by the connector.
          items:
            $ref: '#/components/schemas/CreateConnectorResponse_tasks'
          type: array
      type: object
    ListConnectorsResponse:
      additionalProperties: true
      description: List of connectors.
      type: object
    GetConnectorResponse:
      example:
        name: name
        config: '{}'
        tasks:
        - task: 0.8008281904610115
          connector: connector
        - task: 0.8008281904610115
          connector: connector
      properties:
        name:
          description: Name of the connector.
          type: string
        config:
          description: Configuration of a connector/task/worker. All keys/values should
            be strings.
          type: object
        tasks:
          description: List of active tasks generated by the connector.
          items:
            $ref: '#/components/schemas/CreateConnectorResponse_tasks'
          type: array
      type: object
    GetConnectorStatusResponse:
      properties:
        name:
          description: Name of the connector.
          type: string
        connector:
          $ref: '#/components/schemas/GetConnectorStatusResponse_connector'
        tasks:
          description: List of task status for the connector.
          items:
            $ref: '#/components/schemas/GetConnectorStatusResponse_tasks'
          type: array
      type: object
    Config:
      description: Configuration of a connector/task/worker. All keys/values should
        be strings.
      type: object
    ConnectorName:
      description: Name of the connector.
      type: string
    TaskID:
      description: ID of the task.
      type: number
    TaskTrace:
      description: Stack trace information if the task has failed.
      type: string
    State:
      description: State of a connector/task/worker.
      enum:
      - UNASSIGNED
      - RUNNING
      - PAUSED
      - FAILED
      - RESTARTING
      - DESTROYED
      type: string
    WorkerID:
      description: ID of the worker.
      type: string
    inline_response_200_connector:
      description: Connector status.
      example:
        state: state
        worker_id: worker_id
      properties:
        state:
          description: State of the connector.
          type: string
        worker_id:
          description: ID of the worker running the connector.
          type: string
      type: object
    inline_response_200_tasks:
      example:
        trace: trace
        id: 0.8008281904610115
        state: state
        worker_id: worker_id
      properties:
        id:
          description: ID of the task.
          type: number
        state:
          description: Current state of the task.
          type: string
        worker_id:
          description: ID of the worker running the task.
          type: string
        trace:
          description: Stack trace information if the task has failed.
          type: string
      type: object
    inline_response_200:
      example:
        connector:
          state: state
          worker_id: worker_id
        name: name
        tasks:
        - trace: trace
          id: 0.8008281904610115
          state: state
          worker_id: worker_id
        - trace: trace
          id: 0.8008281904610115
          state: state
          worker_id: worker_id
      properties:
        name:
          description: Name of the connector.
          type: string
        connector:
          $ref: '#/components/schemas/inline_response_200_connector'
        tasks:
          description: List of task status for the connector.
          items:
            $ref: '#/components/schemas/inline_response_200_tasks'
          type: array
      type: object
    CreateConnectorResponse_tasks:
      example:
        task: 0.8008281904610115
        connector: connector
      properties:
        connector:
          description: Name of the connector.
          type: string
        task:
          description: ID of the task.
          type: number
      type: object
    GetConnectorStatusResponse_connector:
      description: Connector status.
      properties:
        state:
          $ref: '#/components/schemas/State'
        worker_id:
          description: ID of the worker.
          type: string
      type: object
    GetConnectorStatusResponse_tasks:
      properties:
        id:
          description: ID of the task.
          type: number
        trace:
          description: Stack trace information if the task has failed.
          type: string
        state:
          $ref: '#/components/schemas/State'
        worker_id:
          description: ID of the worker.
          type: string
      type: object
