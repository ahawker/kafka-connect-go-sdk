/*
Kafka Connect REST API

Kafka Connect REST API https://docs.confluent.io/platform/current/connect/references/restapi.html

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListConnectorTasksResponseTasks struct for ListConnectorTasksResponseTasks
type ListConnectorTasksResponseTasks struct {
	Id *ListConnectorTasksResponseId `json:"id,omitempty"`
	// Configuration of a connector/task/worker. All keys/values should be strings.
	Config map[string]interface{} `json:"config,omitempty"`
}

// NewListConnectorTasksResponseTasks instantiates a new ListConnectorTasksResponseTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListConnectorTasksResponseTasks() *ListConnectorTasksResponseTasks {
	this := ListConnectorTasksResponseTasks{}
	return &this
}

// NewListConnectorTasksResponseTasksWithDefaults instantiates a new ListConnectorTasksResponseTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListConnectorTasksResponseTasksWithDefaults() *ListConnectorTasksResponseTasks {
	this := ListConnectorTasksResponseTasks{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListConnectorTasksResponseTasks) GetId() ListConnectorTasksResponseId {
	if o == nil || o.Id == nil {
		var ret ListConnectorTasksResponseId
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectorTasksResponseTasks) GetIdOk() (*ListConnectorTasksResponseId, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListConnectorTasksResponseTasks) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given ListConnectorTasksResponseId and assigns it to the Id field.
func (o *ListConnectorTasksResponseTasks) SetId(v ListConnectorTasksResponseId) {
	o.Id = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ListConnectorTasksResponseTasks) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectorTasksResponseTasks) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ListConnectorTasksResponseTasks) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ListConnectorTasksResponseTasks) SetConfig(v map[string]interface{}) {
	o.Config = v
}

func (o ListConnectorTasksResponseTasks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableListConnectorTasksResponseTasks struct {
	value *ListConnectorTasksResponseTasks
	isSet bool
}

func (v NullableListConnectorTasksResponseTasks) Get() *ListConnectorTasksResponseTasks {
	return v.value
}

func (v *NullableListConnectorTasksResponseTasks) Set(val *ListConnectorTasksResponseTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableListConnectorTasksResponseTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableListConnectorTasksResponseTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListConnectorTasksResponseTasks(val *ListConnectorTasksResponseTasks) *NullableListConnectorTasksResponseTasks {
	return &NullableListConnectorTasksResponseTasks{value: val, isSet: true}
}

func (v NullableListConnectorTasksResponseTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListConnectorTasksResponseTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


