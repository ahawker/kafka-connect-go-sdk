/*
Kafka Connect REST API

Kafka Connect REST API https://docs.confluent.io/platform/current/connect/references/restapi.html

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListConnectorTopicsResponseValue Connector topics.
type ListConnectorTopicsResponseValue struct {
	// Connector topics.
	Topics []string `json:"topics,omitempty"`
}

// NewListConnectorTopicsResponseValue instantiates a new ListConnectorTopicsResponseValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListConnectorTopicsResponseValue() *ListConnectorTopicsResponseValue {
	this := ListConnectorTopicsResponseValue{}
	return &this
}

// NewListConnectorTopicsResponseValueWithDefaults instantiates a new ListConnectorTopicsResponseValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListConnectorTopicsResponseValueWithDefaults() *ListConnectorTopicsResponseValue {
	this := ListConnectorTopicsResponseValue{}
	return &this
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *ListConnectorTopicsResponseValue) GetTopics() []string {
	if o == nil || o.Topics == nil {
		var ret []string
		return ret
	}
	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectorTopicsResponseValue) GetTopicsOk() ([]string, bool) {
	if o == nil || o.Topics == nil {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *ListConnectorTopicsResponseValue) HasTopics() bool {
	if o != nil && o.Topics != nil {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []string and assigns it to the Topics field.
func (o *ListConnectorTopicsResponseValue) SetTopics(v []string) {
	o.Topics = v
}

func (o ListConnectorTopicsResponseValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Topics != nil {
		toSerialize["topics"] = o.Topics
	}
	return json.Marshal(toSerialize)
}

type NullableListConnectorTopicsResponseValue struct {
	value *ListConnectorTopicsResponseValue
	isSet bool
}

func (v NullableListConnectorTopicsResponseValue) Get() *ListConnectorTopicsResponseValue {
	return v.value
}

func (v *NullableListConnectorTopicsResponseValue) Set(val *ListConnectorTopicsResponseValue) {
	v.value = val
	v.isSet = true
}

func (v NullableListConnectorTopicsResponseValue) IsSet() bool {
	return v.isSet
}

func (v *NullableListConnectorTopicsResponseValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListConnectorTopicsResponseValue(val *ListConnectorTopicsResponseValue) *NullableListConnectorTopicsResponseValue {
	return &NullableListConnectorTopicsResponseValue{value: val, isSet: true}
}

func (v NullableListConnectorTopicsResponseValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListConnectorTopicsResponseValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


